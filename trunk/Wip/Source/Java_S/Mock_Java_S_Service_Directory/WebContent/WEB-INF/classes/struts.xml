<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE struts PUBLIC
    "-//Apache Software Foundation//DTD Struts Configuration 2.0//EN"
    "http://struts.apache.org/dtds/struts-2.0.dtd">
<struts>
	<constant name="struts.action.extension" value="action_Intern_004" />
	<constant name="struts.enable.DynamicMethFodInvocation" value="false" />
	<constant name="struts.devMode" value="false" />
	<constant name="struts.custom.i18n.resources" value="ApplicationResources" />

	<package name="default" extends="struts-default" namespace="">

		<result-types>
			<result-type name="tiles" class="org.apache.struts2.views.tiles.TilesResult" />
		</result-types>
<!-- 

		<interceptors>
			<interceptor name="authorizationinterceptor" class="mock.appcode.web.filter.AuthorizationInterceptor" />
		</interceptors>

 -->
		<!-- <default-interceptor-ref name="authorizationinterceptor" /> -->

		<default-action-ref name="default-action" />
		
<!-- 
		<global-exception-mappings> 
		<exception-mapping result="error" exception="java.lang.NullPointerException"></exception-mapping> 
			</global-exception-mappings> 
-->
			
			
		<action name="login" method="doLogin"
			class="mock.appcode.web.action.UserAction">
			<result name="input">/_index.jsp</result>
			<result name="loginsuccess" type="tiles">welcome.tiles</result>
			<result name="loginfailure">/_loginFailure.jsp</result>
		</action>

		<action name="logout" method="logout"
			class="mock.appcode.web.action.LogoutAction">
			<result name="logout_success">/_index.jsp</result>
		</action>

		<action name="getOrganisationsByActive" method="getOrganisationsByActive"
			class="mock.appcode.web.action.OrganisationAction">
			<!-- 
			<interceptor-ref name="authorizationinterceptor"></interceptor-ref>
			 -->
			<result name="success" type="tiles">org.getByActive.tiles</result>
			<result name="fail" type="tiles">error.tiles</result>
		</action>

		<action name="addOrganisation" method="addOrganisation"
			class="mock.appcode.web.action.OrganisationAction">
<!-- 
			<exception-mapping exception="java.lang.NullPointerException"
				result="error" />
 -->
			<result name="success" type="tiles">org.add.tiles
			</result>
			<result name="error">error.tiles</result>
		</action>
		
	

		<action name="firstOrganistationList" method=" getOrganisationsByActive" class="mock.appcode.web.action.OrganisationAction">
 			<result name="success" type="tiles" >org.getByActive.tiles</result>
 		</action>
 		
 		<action name="backOrganistationList" method=" getOrganisationsByActive" class="mock.appcode.web.action.OrganisationAction">
 			<result name="success" type="tiles" >org.getByActive.tiles</result>
 		</action>

	 	<action name="nextOrganistationList" method=" getOrganisationsByActive" class="mock.appcode.web.action.OrganisationAction">
 			<result name="success" type="tiles" >org.getByActive.tiles</result>
 		</action>
 	
 		
 		 <action name="endOrganistationList" method=" getOrganisationsByActive" class="mock.appcode.web.action.OrganisationAction">
 			<result name="success" type="tiles" >org.getByActive.tiles</result>
 		</action>
 		
 			<action name="firstOrganistationList2" method="getAllOrganisations" class="mock.appcode.web.action.OrganisationAction">
 			<result name="success" type="tiles" >org.getByActive.tiles</result>
 		</action>
 		
 		<action name="backOrganistationList2" method=" getAllOrganisations" class="mock.appcode.web.action.OrganisationAction">
 			<result name="success" type="tiles" >org.getByActive.tiles</result>
 		</action>

	 	<action name="nextOrganistationList2" method=" getAllOrganisations" class="mock.appcode.web.action.OrganisationAction">
 			<result name="success" type="tiles" >org.getByActive.tiles</result>
 		</action>
 	
 		
 		 <action name="endOrganistationList2" method=" getAllOrganisations" class="mock.appcode.web.action.OrganisationAction">
 			<result name="success" type="tiles" >org.getByActive.tiles</result>
 		</action>
 		
 		
 			<action name="getAllOrganisations" method="getAllOrganisations"
			class="mock.appcode.web.action.OrganisationAction">
				<result name="success" type="tiles">org.getByActive.tiles
				</result>
				<result name="error">error.tiles</result>
			</action>
 		
		<action name="saveOrganisation" method="saveOrganisation"
			class="mock.appcode.web.action.OrganisationAction">
			<result name="success">/_index.jsp </result>

		</action>
		
		
		<!-- 
		
		<action name="LeadContact" method="getContact"
			class="mock.appcode.web.action.ContactAction">

			<result name="success">/lookupContact.jsp</result>

		</action>
		 -->

		<action name="default-action">
			<result type="tiles">error.tiles</result>
		</action>


	</package>

</struts>